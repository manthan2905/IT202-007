function changeBalance($db, $src, $dest, $type, $balChange, $memo = '') {
    // Src Account Balance
    $stmt = $db->prepare("SELECT balance from Accounts WHERE id = :id");
    $stmt->execute([":id" => $src]);
    $srcAcct = $stmt->fetch(PDO::FETCH_ASSOC);
      
    // Dest Account Balance
    $stmt->execute([":id" => $dest]);
    $destAcct = $stmt->fetch(PDO::FETCH_ASSOC);
      
    // Insert Transaction
    $transactions = $db->prepare(
       "INSERT INTO Transactions (act_src_id, act_dest_id, amount, action_type, memo, expected_total)
       VALUES (:act_src_id, :act_dest_id, :amount, :action_type, :memo, :expected_total)"
    );
    $accounts = $db->prepare(
       "UPDATE Accounts SET balance = :balance WHERE id = :id"
    );
      
    // Calc
    // Force balChange positive
    $balChange = abs($balChange);
    $finalSrcBalace = $srcAcct['balance'] - $balChange;
    $finalDestBalace = $destAcct['balance'] + $balChange;
      
    // First action
    $transactions->execute([
       ":act_src_id" => $src,
       ":act_dest_id" => $dest,
       ":amount" => -$balChange,
       ":action_type" => $type,
       ":memo" => $memo,
       ":expected_total" => $finalSrcBalace
    ]);
      
    // Second action
    $transactions->execute([
       ":act_src_id" => $dest,
       ":act_dest_id" => $src,
       ":amount" => $balChange,
       ":action_type" => $type,
       ":memo" => $memo,
       ":expected_total" => $finalDestBalace
    ]);
      
    // Update balances of Accounts
    $accounts->execute([":balance" => $finalSrcBalace, ":id" => $src]);
    $accounts->execute([":balance" => $finalDestBalace, ":id" => $dest]);
      
    return $transactions;